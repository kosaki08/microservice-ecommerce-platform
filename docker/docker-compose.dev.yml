services:
  backend:
    build:
      context: ../
      dockerfile: ./apps/backend/Dockerfile.dev
      args:
        ENTRYPOINT_SCRIPT: ./docker/entrypoints/entrypoint-dev.sh
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/health"]
      interval: 10s
      timeout: 5s
      retries: 2
      start_period: 30s
    volumes:
      - ../apps/backend:/app/apps/backend
      - ../packages/prisma-schemas:/app/packages/prisma-schemas
      - ../packages/shared:/app/packages/shared
      - ../packages/prettier-config:/app/packages/prettier-config
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://user:password@postgres:5432/ecommerce
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET_KEY=dev_jwt_secret_for_testing
      - JWT_EXPIRES_IN=1h
      - JWT_REFRESH_SECRET_KEY=dev_jwt_refresh_secret_for_testing
      - JWT_REFRESH_EXPIRES_IN=7d
      - LOG_LEVEL=debug
      - APP_HTTP_PORT=8080
    ports:
      - "5555:5555"
    depends_on:
      postgres:
        condition: service_healthy
      # redis:
      #   condition: service_started

  frontend:
    build:
      context: ../
      dockerfile: ./apps/frontend/Dockerfile.dev
    volumes:
      - ../apps/frontend:/app/apps/frontend
      - ../packages/ui:/app/packages/ui
      - ../packages/typescript-config:/app/packages/typescript-config
      - ../packages/eslint-config:/app/packages/eslint-config
      - ../packages/prettier-config:/app/packages/prettier-config
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://backend:3000
    depends_on:
      - backend
      # condition: service_healthy

  postgres:
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ecommerce

  # redis: {}

  # pgadmin:
  #   profiles: ["debug"]
  #   image: dpage/pgadmin4
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: "kazunoriosaki@gmail.com"
  #     PGADMIN_DEFAULT_PASSWORD: "password"
  #   ports:
  #     - "5050:80"
  #   depends_on:
  #     - postgres

  # redis-commander:
  #   profiles: ["debug"]
  #   image: rediscommander/redis-commander
  #   environment:
  #     - REDIS_HOSTS=redis:redis:6379
  #   ports:
  #     - "8081:8081"
  #   depends_on:
  #     - redis

  # prometheus:
  #   profiles: ["monitoring"]
  #   environment:
  #     - PROMETHEUS_ENV=development
  #   volumes:
  #     - ../infra/monitoring/prometheus:/etc/prometheus

  # grafana:
  #   profiles: ["monitoring"]
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #     - GF_SECURITY_ADMIN_USER=admin
  #     - GF_AUTH_DISABLE_LOGIN_FORM=false
