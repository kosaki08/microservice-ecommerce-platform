services:
  vault:
    image: vault:1.13.3
    ports:
      - "8200:8200"
    volumes:
      - ../infra/secrets/vault/policies:/vault/policies
      - ../infra/secrets/vault/scripts:/vault/scripts
    cap_add:
      - IPC_LOCK

  vault-service:
    ports:
      - "3010:3010"
    environment:
      - VAULT_ADDR=http://vault:8200
      - AUTH_TOKEN_TTL=1h
      - ROTATION_SCHEDULE=0 0 * * *
    depends_on:
      - vault

  user-service:
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis

  gateway:
    ports:
      - "3000:3000"
    depends_on:
      - vault-service
      - user-service
    networks:
      - backend

  rest-frontend:
    build:
      context: ../
      dockerfile: ./apps/rest-frontend/Dockerfile
    ports:
      - "3005:3000"
    depends_on:
      - vault-service
      - user-service
      # - order-service
      # - payment-service
      # - product-service
      - gateway
    networks:
      - monitoring
      - backend

  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  prometheus:
    profiles: ["monitoring"]
    image: prom/prometheus
    volumes:
      - ../infra/monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    networks:
      - monitoring

  grafana:
    profiles: ["monitoring"]
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - "3002:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ../infra/monitoring/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - monitoring

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  monitoring:
    driver: bridge
  backend:
    driver: bridge
