services:
  vault:
    container_name: vault
    command: server -config=/vault/config/vault-config.hcl
    volumes:
      - ../infra/secrets/vault/config/production:/vault/config
      - ../infra/secrets/vault/data/production:/vault/data

  vault-service:
    build:
      context: ../
      dockerfile: ./apps/rest-backend/services/vault-service/Dockerfile
    environment:
      - NODE_ENV=production
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=${VAULT_TOKEN}
      - AUTH_TOKEN_TTL=15m
      - ROTATION_SCHEDULE=0 */4 * * *
      - LOG_LEVEL=info
    secrets:
      - vault_token

  user-service:
    build:
      context: ../
      dockerfile: ./apps/rest-backend/services/user-service/Dockerfile
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
    depends_on:
      - postgres
      - redis

  rest-frontend:
  build:
    context: ../
    dockerfile: ./apps/rest-frontend/Dockerfile
    environment:
      - NODE_ENV=production
      - VAULT_SERVICE_URL=${VAULT_SERVICE_URL}
      - USER_SERVICE_URL=${USER_SERVICE_URL}
      - ORDER_SERVICE_URL=${ORDER_SERVICE_URL}
      - PAYMENT_SERVICE_URL=${PAYMENT_SERVICE_URL}
      - PRODUCT_SERVICE_URL=${PRODUCT_SERVICE_URL}
      - GATEWAY_URL=${GATEWAY_URL}
    depends_on:
      - vault-service
      - user-service
      # - order-service
      # - payment-service
      # - product-service
      # - gateway
    networks:
      - monitoring
      - backend

  postgres:
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  prometheus:
    profiles: ["monitoring"]
    environment:
      - PROMETHEUS_ENV=production
    volumes:
      - ../infra/monitoring/prometheus:/etc/prometheus
    restart: always

  grafana:
    profiles: ["monitoring"]
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    restart: always
