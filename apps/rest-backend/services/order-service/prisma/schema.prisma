generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("ORDER_DB_URL")
}

enum OrderStatus {
  PENDING
  CONFIRMED
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
  REFUNDED
}

model Order {
  id                 String      @id @default(uuid())
  account_id         String
  subtotal           Decimal     @db.Decimal(10, 0)
  tax                Decimal     @db.Decimal(10, 0)
  shipping_fee       Decimal     @db.Decimal(10, 0)
  total_amount       Decimal     @db.Decimal(10, 0)
  status             OrderStatus
  shipping_address   Json        @db.JsonB
  billing_address    Json        @db.JsonB
  shipping_method    String?
  estimated_delivery DateTime?
  created_by         String?
  created_at         DateTime    @default(now())
  updated_at         DateTime    @updatedAt

  orderItem     OrderItem[]
  statusHistory StatusHistory[]

  @@index([account_id])
  @@index([created_at])
  @@index([status, created_at])
}

model OrderItem {
  id               String   @id @default(uuid())
  order_id         String
  variant_id       String
  quantity         Int
  unit_price       Decimal  @db.Decimal(10, 0)
  tax_rate         Decimal  @db.Decimal(5, 2)
  tax_amount       Decimal  @db.Decimal(10, 0)
  subtotal         Decimal  @db.Decimal(10, 0)
  product_snapshot Json     @db.JsonB
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt

  order Order @relation(fields: [order_id], references: [id])

  @@index([order_id])
  @@index([variant_id])
}

enum OrderEventType {
  STATUS_CHANGED
  PAYMENT_CONFIRMED
  SHIPPING_UPDATED
  DELIVERY_CONFIRMED
  CANCELLED
  REFUNDED
}

model StatusHistory {
  id              String         @id @default(uuid())
  order_id        String
  previous_status String?
  new_status      String
  event_type      OrderEventType
  comment         String?
  changed_by      String?
  created_at      DateTime       @default(now())

  order Order @relation(fields: [order_id], references: [id])

  @@index([order_id])
}
